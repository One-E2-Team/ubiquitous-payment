version: '3.9'
services:

  rdb:
    container_name: db_mysql
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_USER: ${RDB_USERNAME}
      MYSQL_ROOT_PASSWORD: ${RDB_PASSWORD}
      MYSQL_DATABASE: webshop
    command: --init-file /data/application/init.sql
    ports:
      - 3306:3306
    volumes:
      - type: volume
        source: data_rdb
        target: /var/lib/mysql
      - ./conf/mysql/init.sql:/data/application/init.sql

  mongo:
    container_name: nosqldb_mongo1
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${NOSQLDB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${NOSQLDB_PASSWORD}
    ports:
      - 27017:27017
    volumes:
      - type: volume
        source: data_nodql
        target: /data/db

  webshop:
    container_name: webshop_container
    restart: always
    environment:
      RDB_USERNAME: ${RDB_USERNAME}
      RDB_PASSWORD: ${RDB_PASSWORD}
      DOCKER_ENV_SET_DEV: ""
      PUBLIC_JWT_TOKEN_SECRET: ${PUBLIC_JWT_TOKEN_SECRET}
    build:
      context: .
      dockerfile: GoBuild.dockerfile
      args:
        ARG_TARGET_GO: webshop
    volumes:
      - ./common_pass.txt:/ubiquitous-payment/common_pass.txt
      - ../staticdata:/staticdata
      - ../logs:/logs
    ports:
      - 1080:8080
    depends_on:
      - rdb

  psp:
    container_name: psp_container
    restart: always
    environment:
      PAYPAL_CLIENT_ID: ${PAYPAL_CLIENT_ID}
      PAYPAL_CLIENT_SECRET: ${PAYPAL_CLIENT_SECRET}
      NOSQLDB_USERNAME: ${NOSQLDB_USERNAME}
      NOSQLDB_PASSWORD: ${NOSQLDB_PASSWORD}
      DOCKER_ENV_SET_DEV: ""
      PUBLIC_JWT_TOKEN_SECRET: ${PUBLIC_JWT_TOKEN_SECRET}
    build:
      context: .
      dockerfile: GoBuild.dockerfile
      args:
        ARG_TARGET_GO: psp
    volumes:
      - ./temp:/ubiquitous-payment/temp
      - ./common_pass.txt:/ubiquitous-payment/common_pass.txt
      - ../logs:/logs
    ports:
      - 1081:8080
    depends_on:
      - mongo

  bank1:
    container_name: bank1_container
    restart: always
    environment:
      RDB_USERNAME: ${RDB_USERNAME}
      RDB_PASSWORD: ${RDB_PASSWORD}
      DOCKER_ENV_SET_DEV: ""
      PUBLIC_JWT_TOKEN_SECRET: ${PUBLIC_JWT_TOKEN_SECRET}
      PAN_PREFIX: ${BANK1_PAN_PREFIX}
      BANK_HOST: ${BANK1_HOST}
    build:
      context: .
      dockerfile: GoBuild.dockerfile
      args:
        ARG_TARGET_GO: bank
    volumes:
      - ./common_pass.txt:/ubiquitous-payment/common_pass.txt
      - ../logs:/logs
    ports:
      - 10001:8080
    depends_on:
      - rdb

  pcc:
    container_name: pcc_container
    restart: always
    environment:
      RDB_USERNAME: ${RDB_USERNAME}
      RDB_PASSWORD: ${RDB_PASSWORD}
      DOCKER_ENV_SET_DEV: ""
      PUBLIC_JWT_TOKEN_SECRET: ${PUBLIC_JWT_TOKEN_SECRET}
    build:
      context: .
      dockerfile: GoBuild.dockerfile
      args:
        ARG_TARGET_GO: pcc
    depends_on:
      - rdb

  bank2:
    container_name: bank2_container
    restart: always
    environment:
      RDB_USERNAME: ${RDB_USERNAME}
      RDB_PASSWORD: ${RDB_PASSWORD}
      DOCKER_ENV_SET_DEV: ""
      PUBLIC_JWT_TOKEN_SECRET: ${PUBLIC_JWT_TOKEN_SECRET}
      PAN_PREFIX: ${BANK2_PAN_PREFIX}
      BANK_HOST: ${BANK2_HOST}
    build:
      context: .
      dockerfile: GoBuild.dockerfile
      args:
        ARG_TARGET_GO: bank
    volumes:
      - ./common_pass.txt:/ubiquitous-payment/common_pass.txt
      - ../logs:/logs
    ports:
      - 10002:8080
    depends_on:
      - rdb

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${NOSQLDB_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${NOSQLDB_PASSWORD}

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

volumes:
  data_rdb:
  data_nodql: